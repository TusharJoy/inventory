version: '3.8'

services:
  app:
    platform: linux/arm64/v8
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
      - ~/.composer:/var/www/.composer
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - PHP_IDE_CONFIG=serverName=Docker
      - XDEBUG_MODE=debug
      - XDEBUG_CONFIG=client_host=host.docker.internal
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=inventory
      - DB_USERNAME=inventory_user
      - DB_PASSWORD=secret
    networks:
      - inventory-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: frontend
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
      - ~/.npm:/var/www/.npm
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - VITE_APP_URL=http://localhost:8000
      - HOST=0.0.0.0
      - PORT=5173
    networks:
      - inventory-network
    depends_on:
      - app

  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: inventory
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_USER: inventory_user
      MYSQL_PASSWORD: secret
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - inventory-network
    ports:
      - "3306:3306"

networks:
  inventory-network:
    driver: bridge
    name: inventory-network

volumes:
  dbdata:
    driver: local
    name: inventory-dbdata 